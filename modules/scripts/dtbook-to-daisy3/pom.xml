<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.daisy.pipeline.modules</groupId>
    <artifactId>scripts-parent</artifactId>
    <version>1.10.2-SNAPSHOT</version>
    <relativePath>../parent/</relativePath>
  </parent>

  <artifactId>dtbook-to-daisy3</artifactId>
  <version>2.1.2-SNAPSHOT</version>
  <packaging>bundle</packaging>

  <name>DAISY Pipeline 2 module :: DTBook to DAISY 3</name>
  
  <dependencies>
    <!--
        runtime dependencies
    -->
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>common-utils</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>css-speech</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>css-utils</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>daisy3-utils</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>dtbook-tts</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>dtbook-utils</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>fileset-utils</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>file-utils</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>tts-helpers</artifactId>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>tester</id>
      <!--
          Tests are executed in a separate project, but list some of the test dependencies here too so
          that if they are snapshots Maven will put them in the reactor before this project.
      -->
      <properties>
        <jaxp-standalone.version>1.4.2</jaxp-standalone.version>
        <zedval-osgi.version>2.1</zedval-osgi.version>
        <xproc-engine-daisy-pipeline.version>1.10.1-SNAPSHOT</xproc-engine-daisy-pipeline.version>
        <xprocspec.version>1.1.0</xprocspec.version>
        <xprocspec-runner.version>1.0.0</xprocspec-runner.version>
        <pax-exam-helper.version>1.9.1</pax-exam-helper.version>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.daisy.pipeline</groupId>
          <artifactId>xproc-api</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.daisy.maven</groupId>
          <artifactId>xproc-engine-daisy-pipeline</artifactId>
          <version>${xproc-engine-daisy-pipeline.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.daisy.xprocspec</groupId>
          <artifactId>xprocspec</artifactId>
          <version>${xprocspec.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.daisy.maven</groupId>
          <artifactId>xprocspec-runner</artifactId>
          <version>${xprocspec-runner.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.daisy.pipeline</groupId>
          <artifactId>pax-exam-helper</artifactId>
          <version>${pax-exam-helper.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-invoker-plugin</artifactId>
            <version>1.8</version>
            <configuration>
              <settingsFile>${basedir}/src/test/resources/settings.xml</settingsFile>
              <localRepositoryPath>${project.build.directory}/test/local-repo</localRepositoryPath>
              <properties>
                <!-- for settings file -->
                <testDependenciesLibUrl>${project.baseUri}/src/test/resources/deps/lib</testDependenciesLibUrl>
              </properties>
            </configuration>
            <executions>
              <!-- build jaxp-standalone and zedval-osgi -->
              <execution>
                <id>build-test-dependencies</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <projectsDirectory>${basedir}/src/test/resources/deps/src</projectsDirectory>
                  <cloneProjectsTo>${project.build.directory}/test/deps/src</cloneProjectsTo>
                  <pomIncludes>
                    <pomInclude>jaxp-standalone</pomInclude>
                    <pomInclude>zedval-osgi</pomInclude>
                  </pomIncludes>
                  <goals>
                    <goal>install</goal>
                  </goals>
                </configuration>
              </execution>
              <execution>
                <id>install-dtbook-to-daisy3</id>
                <!-- to make sure that by now dtbook-to-daisy3 jar has been built (see
                     "bundle-before-test" execution of maven-bundle-plugin which is bound to
                     generate-test-resources phase) -->
                <phase>process-test-resources</phase>
                <goals>
                  <goal>install</goal>
                </goals>
              </execution>
              <!-- need to run tests in separate project because generated test dependencies can not be
                   added dynamically in Maven -->
              <execution>
                <id>execute-test</id>
                <phase>test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <projectsDirectory>${basedir}/src/test/resources</projectsDirectory>
                  <cloneProjectsTo>${project.build.directory}/test</cloneProjectsTo>
                  <properties>
                    <localRepositoryPath>${project.build.directory}/test/local-repo</localRepositoryPath>
                    <dtbook-to-daisy3.version>${project.version}</dtbook-to-daisy3.version>
                    <jaxp-standalone.version>${jaxp-standalone.version}</jaxp-standalone.version>
                    <zedval-osgi.version>${zedval-osgi.version}</zedval-osgi.version>
                    <xproc-engine-daisy-pipeline.version>${xproc-engine-daisy-pipeline.version}</xproc-engine-daisy-pipeline.version>
                    <xprocspec.version>${xprocspec.version}</xprocspec.version>
                    <xprocspec-runner.version>${xprocspec-runner.version}</xprocspec-runner.version>
                    <pax-exam-helper.version>${pax-exam-helper.version}</pax-exam-helper.version>
                  </properties>
                  <pomIncludes>
                    <pomInclude>test</pomInclude>
                  </pomIncludes>
                  <goals>
                    <goal>test</goal>
                  </goals>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>default-testResources</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <executions>
              <execution>
                <id>default-testCompile</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
